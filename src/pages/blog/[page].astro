---
import CardBlogPrimary from "@/components/Blog/CardBlogPrimary.astro"
import CardBlogSecondary from "@/components/Blog/CardBlogSecondary.astro"
import CardBlogTertiary from "@/components/Blog/CardBlogTertiary.astro"
import ImageBlogCard from "@/components/Blog/ImageBlogCard.astro"
import ImageBlogCardSecondary from "@/components/Blog/ImageBlogCardSecondary.astro"
import ImageBlogCardTertiary from "@/components/Blog/ImageBlogCardTertiary.astro"
import { BreadCrumb, getBreadcrumbs } from "@/components/BreadCrumb"
import Footer from "@/components/Footer.astro"
import { Header } from "@/components/Header"
import { Pagination } from "@/components/Pagination"
import Tags from "@/components/Tags.astro"
import TagsContainer from "@/components/TagsContainer.astro"
import Subtitle from "@/components/Typography/Subtitle.astro"
import Title from "@/components/Typography/Title.astro"
import Layout from "@/layouts/Layout.astro"
import getSortedPosts from "@/utils/getSortedPosts"
import type { GetStaticPathsOptions, Page } from "astro"
import { getCollection, type CollectionEntry } from "astro:content"

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const PAGE_SIZE = 8

	const allPosts = getSortedPosts(await getCollection("posts")).slice(5)

	return paginate(allPosts, { pageSize: PAGE_SIZE })
}

interface Props {
	page: Page<CollectionEntry<"posts">>
}
const { page } = Astro.props

const allPosts = getSortedPosts(await getCollection("posts"))

const pageTitle = "My Astro Learning Blog"

const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())]

const lastPosts1 = allPosts.slice(0, 3)
const lastPosts2 = allPosts.slice(3, 5)

const currentPath = Astro.url.pathname
const breadcrumbs = getBreadcrumbs(
	currentPath.replace(String(page.currentPage), `Page ${page.currentPage}`)
)
---

<Layout title={pageTitle}>
	<Header slot="header" class="bg-light-primary" />

	<main>
		<header class="flex flex-col items-center gap-3 bg-light-primary px-4 pb-10 pt-32">
			<Title> Nuestro blog </Title>

			<BreadCrumb breadcrumb={breadcrumbs} />

			<TagsContainer>
				{
					tags.map((tag) => (
						<a href={`/tag/${tag}`}>
							<Tags>{tag}</Tags>
						</a>
					))
				}
			</TagsContainer>
		</header>

		<div class="mx-auto flex w-full max-w-screen-xl flex-col items-center gap-12 px-4 pt-14">
			<Subtitle> Últimas entradas del blog </Subtitle>
			<section class="w-full">
				<ul
					class="grid w-full auto-rows-[200px] grid-rows-[repeat(4,minmax(0,250px))] gap-6 lg:grid-cols-2 lg:grid-rows-[repeat(2,minmax(0,300px))]"
				>
					{
						lastPosts1.map((post, index) => {
							const {
								data: {
									thumbnail: { alt, image },
									title,
									tags,
									pubDate,
								},
								slug,
							} = post
							const isMainCard = index === 0
							return (
								<CardBlogPrimary
									class:list={[isMainCard && "row-span-2"]}
									isMainCard={isMainCard}
									date={pubDate}
									tags={tags}
									title={title}
									href={`/blog/${slug}/`}
								>
									<ImageBlogCard slot={"image"} src={image} alt={alt} />
								</CardBlogPrimary>
							)
						})
					}
					{
						lastPosts2.map((post) => {
							const {
								data: {
									thumbnail: { alt, image },
									title,
									tags,
									pubDate,
								},
								slug,
							} = post
							return (
								<CardBlogSecondary date={pubDate} tags={tags} title={title} href={`/blog/${slug}/`}>
									<ImageBlogCardSecondary slot={"image"} src={image} alt={alt} />
								</CardBlogSecondary>
							)
						})
					}
				</ul>
			</section>

			<div class="flex w-full items-center gap-6" id="mas-articulos">
				<Subtitle>Más artículos</Subtitle>
				<hr class="flex-1 border-2 border-accent" />
			</div>

			<ul
				class:list={[
					"grid w-full auto-rows-min grid-cols-2 gap-2 lg:grid-cols-4 lg:grid-rows-2",
					page.data.length < 4 && "lg:grid-rows-none",
				]}
			>
				{
					page.data.map(
						({
							data: {
								title,
								pubDate,
								thumbnail: { image, alt },
							},
							slug,
						}) => (
							<CardBlogTertiary date={pubDate} title={title} href={`/blog/${slug}/`}>
								<ImageBlogCardTertiary slot={"image"} src={image} alt={alt} />
							</CardBlogTertiary>
						)
					)
				}
			</ul>

			<hr class="border-1 w-full flex-1 border-accent" />

			<Pagination totalPages={page.lastPage} currentPage={page.currentPage} />
		</div>
	</main>

	<Footer slot="footer" />
</Layout>
